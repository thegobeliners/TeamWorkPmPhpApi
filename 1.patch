From 59fb4955b10dc900085958c78fa7b64f7c837539 Mon Sep 17 00:00:00 2001
From: Jamie Buckell <jamie.buckell@visualsoft.co.uk>
Date: Tue, 13 Jun 2017 20:31:08 +0100
Subject: [PATCH 1/8] Added getByName method

---
 src/Company.php | 21 ++++++++++++++++++++-
 1 file changed, 20 insertions(+), 1 deletion(-)

diff --git a/src/Company.php b/src/Company.php
index ffac8d3..9fca55e 100755
--- a/src/Company.php
+++ b/src/Company.php
@@ -274,8 +274,9 @@ public function getAll()
      *
      * All of the companies within the specified project are returned
      *
-     * @param int $id
+     * @param $project_id
      * @return TeamWorkPm\Response\Model
+     * @throws Exception
      */
     public function getByProject($project_id)
     {
@@ -285,4 +286,22 @@ public function getByProject($project_id)
         }
         return $this->rest->get("projects/$project_id/$this->action");
     }
+
+    /**
+     * Retrieving Company by Name
+     *
+     * GET /companies.xml
+     *
+     * All of the companies matching the specified name are returned
+     *
+     * @param $name
+     * @return TeamWorkPm\Response\Model
+     */
+    public function getByName($name)
+    {
+        $name = (string) $name;
+        return $this->rest->get($this->action, [
+          'name' => $name
+        ]);
+    }
 }
\ No newline at end of file

From e7c186b80567c99ec1f3ec41700cdbcec8e54b14 Mon Sep 17 00:00:00 2001
From: Jamie Buckell <jamie.buckell@visualsoft.co.uk>
Date: Tue, 13 Jun 2017 20:43:26 +0100
Subject: [PATCH 2/8] Updated API changes

---
 src/Message.php   | 10 +++++++---
 src/Milestone.php | 10 +++++++---
 src/Project.php   | 24 +++++++++++++-----------
 3 files changed, 27 insertions(+), 17 deletions(-)

diff --git a/src/Message.php b/src/Message.php
index 789b271..3cd6c32 100755
--- a/src/Message.php
+++ b/src/Message.php
@@ -7,7 +7,7 @@ protected function init()
     {
         $this->fields = [
             'title'                    => true,
-            'category_id'              => [
+            'category-id'              => [
                 'required'=>true,
                 'attributes'=>[
                     'type'=>'integer'
@@ -26,7 +26,8 @@ protected function init()
             ],
             'body'                     => true,
             'attachments'              => false,
-            'pending_file_attachments' => false
+            'pendingFileAttachments' => false,
+            'author-id' => false,
         ];
         $this->parent = 'post';
         $this->action = 'posts';
@@ -44,9 +45,10 @@ protected function init()
      *
      * Rather than the full message, this returns a summary record for each message in the specified project.
      *
-     * @param int $id
+     * @param      $project_id
      * @param bool $archive
      * @return array|SimpleXMLElement
+     * @throws Exception
      */
     public function getByProject($project_id, $archive = false)
     {
@@ -78,6 +80,7 @@ public function getByProject($project_id, $archive = false)
      * @param int $category_id
      * @param bool $archive
      * @return TeamWorkPm\Response\Model
+     * @throws Exception
      */
     public function getByProjectAndCategory($project_id, $category_id, $archive = false)
     {
@@ -106,6 +109,7 @@ public function getByProjectAndCategory($project_id, $category_id, $archive = fa
      *
      * @param array $data
      * @return int
+     * @throws Exception
      */
     public function insert(array $data)
     {
diff --git a/src/Milestone.php b/src/Milestone.php
index 7fe15d9..1573c9b 100755
--- a/src/Milestone.php
+++ b/src/Milestone.php
@@ -32,14 +32,14 @@ protected function init()
                     'type'=>'boolean'
                 ]
             ],
-            'responsible_party_ids' => true,
+            'responsible-party-ids' => true,
             # USE ONLY FOR UPDATE OR PUT METHOD
-            'move_upcoming_milestones'=>[
+            'move-upcoming-milestones'=>[
               'sibling'=>true,
               'required'=>false,
               'attributes'=>['type'=>'boolean']
             ],
-            'move_upcoming_milestones_off_weekends'=>[
+            'move-upcoming-milestones-off-weekends'=>[
               'sibling'=>true,
               'required'=>false,
               'attributes'=>['type'=>'boolean']
@@ -55,6 +55,7 @@ protected function init()
      * Marks the specified milestone as complete. Returns Status 200 OK.
      * @param int $id
      * @return bool
+     * @throws Exception
      */
     public function complete($id)
     {
@@ -74,6 +75,7 @@ public function complete($id)
      *
      * @param int $id
      * @return bool
+     * @throws Exception
      */
     public function uncomplete($id)
     {
@@ -98,6 +100,7 @@ public function getAll($filter = 'all')
      * Get all milestone
      *
      * @return TeamWorkPm\Response\Model
+     * @throws Exception
      */
     public function getByProject($project_id, $filter = 'all')
     {
@@ -132,6 +135,7 @@ private function getParams($filter)
      *
      * @param array $data
      * @return int
+     * @throws Exception
      */
     public function insert(array $data)
     {
diff --git a/src/Project.php b/src/Project.php
index 51bd9a1..d33845f 100755
--- a/src/Project.php
+++ b/src/Project.php
@@ -10,30 +10,31 @@ protected function init()
             // [Optional. Project Description]
             'description' =>  false,
             // [Optional. Start date in yyyymmdd format]
-            'start_date'  => [
+            'startDate'  => [
                 'required'=> false,
                 'attributes' => [
                     'type'=>'integer'
                 ]
             ],
             // [Optional. End date in yyyymmdd format]
-            'end_date'    => [
+            'endDate'    => [
                 'required' => false,
                 'attributes' => [
                     'type'=>'integer'
                 ]
             ],
             // [Optional. Id of company to assign the project to]
-            'company_id'  => [
+            'companyId'  => [
                 'required' => false,
                 'attributes' => [
                     'type' => 'integer'
                 ]
             ],
             // [Optional. Name of a new company to assign the project to]
-            'new_company'    => false,
+            'newCompany'    => false,
             //[Optional. Numeric ID of project category, 0 = no category]
-            'category_id'     => false,
+            'category-id'     => false,
+            'tags'            => false,
 
             'notifyeveryone' => [
                 'required' => false,
@@ -61,8 +62,7 @@ public function getAll(array $params = [])
 
     /**
      *
-     * @param type $date
-     * @param type $time
+     * @param array $params
      * @return TeamWorkPm\Response\Model
      */
     public function getActive(array $params = [])
@@ -72,8 +72,7 @@ public function getActive(array $params = [])
 
     /**
      *
-     * @param type $date
-     * @param type $time
+     * @param array $params
      * @return TeamWorkPm\Response\Model
      */
     public function getArchived(array $params = [])
@@ -84,8 +83,7 @@ public function getArchived(array $params = [])
     /**
      *
      * @param type $status
-     * @param type $date
-     * @param type $time
+     * @param array $params
      * @return type
      */
     private function getByStatus($status, $params)
@@ -108,6 +106,7 @@ public function getStarred()
      * Adds a project to your list of favourite projects.
      * @param int $id
      * @return bool
+     * @throws Exception
      */
     public function star($id)
     {
@@ -122,6 +121,7 @@ public function star($id)
      * Removes a project from your list of favourite projects.
      * @param int $id
      * @return bool
+     * @throws Exception
      */
     public function unStar($id)
     {
@@ -137,6 +137,7 @@ public function unStar($id)
      *
      * @param type $id
      * @return bool
+     * @throws Exception
      */
     public function activate($id)
     {
@@ -155,6 +156,7 @@ public function activate($id)
      *
      * @param type $id
      * @return bool
+     * @throws Exception
      */
     public function archive($id)
     {

From c68bf5577da14f8afe45811e403b7c35cc201624 Mon Sep 17 00:00:00 2001
From: Jamie Buckell <jamie.buckell@visualsoft.co.uk>
Date: Tue, 13 Jun 2017 20:48:54 +0100
Subject: [PATCH 3/8] Updated notebook to match current API, Also added update
 for current notebooks

---
 src/Notebook.php | 38 +++++++++++++++++++++++++++++++++++---
 1 file changed, 35 insertions(+), 3 deletions(-)

diff --git a/src/Notebook.php b/src/Notebook.php
index 770db8a..25fc233 100755
--- a/src/Notebook.php
+++ b/src/Notebook.php
@@ -9,14 +9,20 @@ protected function init()
             'name' => true,
             'description'=>true,
             'content'=>true,
+            'project-id'=>[
+              'required'=>true,
+              'attributes'=>[
+                'type'=>'integer'
+              ]
+            ],
             'notify'=>false,
-            'category_id'=>[
+            'category-id'=>[
                 'required'=>false,
                 'attributes'=>[
                     'type'=>'integer'
                 ]
             ],
-            'category_name'=> false,
+            'category-name'=> false,
             'private'=>[
                 'required'=>false,
                 'attributes'=>[
@@ -65,6 +71,7 @@ public function getAll($include_content = false)
      *
      * @param int $project_id
      * @return TeamWorkPm\Response\Model
+     * @throws Exception
      */
     public function getByProject($project_id, $include_content = false)
     {
@@ -86,6 +93,7 @@ public function getByProject($project_id, $include_content = false)
      *
      * @param type $id
      * @return bool
+     * @throws Exception
      */
     public function lock($id)
     {
@@ -105,6 +113,7 @@ public function lock($id)
      *
      * @param type $id
      * @return bool
+     * @throws Exception
      */
     public function unlock($id)
     {
@@ -132,6 +141,26 @@ public function insert(array $data)
         return $this->rest->post("projects/$project_id/$this->action", $data);
     }
 
+    /**
+     * Update Notebook
+     *
+     * PUT /notebooks/#{notebook_id}
+     *
+     * Modifies an existing notebook.
+     *
+     * @param array $data
+     * @return mixed
+     * @throws Exception
+     */
+    public function update(array $data)
+    {
+      $id = empty($data['id']) ? 0  : (int) $data['id'];
+      if ($id <= 0) {
+          throw new \TeamWorkPm\Exception('Required field id');
+      }
+      return $this->rest->put("$this->action/$id", $data);
+    }
+
     /**
      *
      * @param array $data
@@ -139,13 +168,16 @@ public function insert(array $data)
      */
     final public function save(array $data)
     {
-        return $this->insert($data);
+      return array_key_exists('id', $data) ?
+          $this->update($data):
+          $this->insert($data);
     }
 
     /**
      *
      * @param int $id
      * @return bool
+     * @throws Exception
      */
     public function delete($id)
     {

From c5a7c18bf5dba139c210779ab6462aff97da1b1c Mon Sep 17 00:00:00 2001
From: Jamie Buckell <jamie.buckell@visualsoft.co.uk>
Date: Tue, 13 Jun 2017 20:57:07 +0100
Subject: [PATCH 4/8] get a specific task by name and updated API

---
 src/Task.php | 24 +++++++++++++++++++-----
 1 file changed, 19 insertions(+), 5 deletions(-)

diff --git a/src/Task.php b/src/Task.php
index 04e7c6a..188cc33 100755
--- a/src/Task.php
+++ b/src/Task.php
@@ -5,6 +5,13 @@ class Task extends Model
     protected function init()
     {
         $this->fields = [
+            'name'=>true,
+            'color'=>[
+                'required'=>false,
+                'attributes'=>[
+                    'type'=>'boolean'
+                ]
+            ],
             'content'=>true,
             'notify'=>[
                 'required'=>false,
@@ -13,13 +20,13 @@ protected function init()
                 ]
             ],
             'description'=>false,
-            'due_date'=>[
+            'due-date'=>[
                 'required'=>false,
                 'attributes'=>[
                     'type'=>'integer'
                 ]
             ],
-            'start_date'=>[
+            'start-date'=>[
                 'required'=>false,
                 'attributes'=>[
                     'type'=>'integer'
@@ -39,15 +46,15 @@ protected function init()
                     'high'
                 ]
             ],
-            'estimated_minutes'=>[
+            'estimated-minutes'=>[
                 'required'=>false,
                 'attributes'=>[
                     'type'=>'integer'
                 ]
             ],
-            'responsible_party_id'     => false,
+            'responsible-party-id'     => false,
             'attachments'              => false,
-            'pending_file_attachments' => false
+            'pendingFileAttachments' => false
         ];
         $this->parent = 'todo-item';
         $this->action = 'todo_items';
@@ -66,6 +73,13 @@ public function get($id, $get_time = false)
         return $this->rest->get("$this->action/$id", $params);
     }
 
+    public function get_tag_by_name($tag_name = null)
+    {
+        $params = [
+          'name' => $tag_name
+        ];
+        return $this->rest->get("$this->action", $params);
+    }
 
     /**
      * Retrieve all tasks on a task list

From 27e5df6b0c9e8731c6c69894940168aa60dce23b Mon Sep 17 00:00:00 2001
From: Jamie Buckell <jamie.buckell@visualsoft.co.uk>
Date: Tue, 13 Jun 2017 20:58:09 +0100
Subject: [PATCH 5/8] Added ability to get user by e-mail

---
 src/People.php | 16 ++++++++++++++++
 1 file changed, 16 insertions(+)

diff --git a/src/People.php b/src/People.php
index 83daa17..396aa81 100755
--- a/src/People.php
+++ b/src/People.php
@@ -132,6 +132,22 @@ public function getAll($pageSize = 200, $page = 1)
         ]);
     }
 
+    /**
+     * Get specific Person by Email
+     * GET /people
+     * Retrieves all of the people in a given project
+     *
+     * @param string $emailaddress
+     * @return TeamWorkPm\Response\Model
+     */
+    public function getByEmail($emailaddress)
+    {
+        $emailaddress = (string) $emailaddress;
+        return $this->rest->get($this->action, [
+            'emailaddress' => $emailaddress
+        ]);
+    }
+
     /**
      * Get all People (within a Project)
      * GET /projects/#{project_id}/people

From 9ee1c3bd88409e9e5547cb94bbc619a3b5fd5a05 Mon Sep 17 00:00:00 2001
From: Jamie Buckell <jamie.buckell@visualsoft.co.uk>
Date: Tue, 13 Jun 2017 21:08:30 +0100
Subject: [PATCH 6/8] Added Tag functionality

---
 src/Tag.php | 63 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 63 insertions(+)
 create mode 100755 src/Tag.php

diff --git a/src/Tag.php b/src/Tag.php
new file mode 100755
index 0000000..34d5c18
--- /dev/null
+++ b/src/Tag.php
@@ -0,0 +1,63 @@
+<?php namespace TeamWorkPm;
+
+class Tag extends Model
+{
+  protected function init()
+  {
+    $this->fields = [
+      'name'=>true,
+      'color'=>[
+        'required'=>true,
+        'attributes'=>[
+          'type'=>'string'
+        ]
+      ],
+    ];
+    $this->action = 'tags';
+  }
+
+  public function get($id = null)
+  {
+    $id = (int) $id;
+    if ($id <= 0) {
+      throw new Exception('Invalid param id');
+    }
+    return $this->rest->get("$this->action/$id");
+  }
+
+  /**
+   * Retrieve All Tags
+   * GET /tags
+   * All of the available tags are returned for all projects
+   *
+   * @param null $tag_name
+   * @return TeamWorkPm\Response\Model
+   *
+   * @author Jamie Buckell
+   */
+  public function getAllTags($tag_name = null)
+  {
+    $params = [];
+    if (!empty($tag_name)) {
+      $params = [
+        'name' => $tag_name
+      ];
+    }
+    return $this->rest->get("$this->action", $params);
+  }
+
+  /**
+   * Creating a Tag
+   *
+   * POST /tags.xml
+   *
+   * Creates a new tag.
+   *
+   * @param array $data
+   * @return int
+   */
+  public function insert(array $data)
+  {
+    return $this->rest->post("$this->action", $data);
+  }
+}
\ No newline at end of file

From 6661014cdcf921450acfc9326911318e5e1de946 Mon Sep 17 00:00:00 2001
From: Jamie Buckell <jamie.buckell@visualsoft.co.uk>
Date: Tue, 13 Jun 2017 21:10:44 +0100
Subject: [PATCH 7/8] Removed random function

---
 src/Task.php | 13 +++++--------
 1 file changed, 5 insertions(+), 8 deletions(-)

diff --git a/src/Task.php b/src/Task.php
index 188cc33..6fbfb98 100755
--- a/src/Task.php
+++ b/src/Task.php
@@ -73,14 +73,6 @@ public function get($id, $get_time = false)
         return $this->rest->get("$this->action/$id", $params);
     }
 
-    public function get_tag_by_name($tag_name = null)
-    {
-        $params = [
-          'name' => $tag_name
-        ];
-        return $this->rest->get("$this->action", $params);
-    }
-
     /**
      * Retrieve all tasks on a task list
      *
@@ -98,6 +90,7 @@ public function get_tag_by_name($tag_name = null)
      * @param mixed $params
      *
      * @return TeamWorkPm\Response\Model
+     * @throws Exception
      */
     public function getByTaskList($task_list_id, $filter = 'all')
     {
@@ -129,6 +122,7 @@ public function getByTaskList($task_list_id, $filter = 'all')
      *
      * @param array $data
      * @return int
+     * @throws Exception
      */
     public function insert(array $data)
     {
@@ -153,6 +147,7 @@ public function insert(array $data)
      *
      * @param int $id
      * @return bool
+     * @throws Exception
      */
     public function complete($id)
     {
@@ -172,6 +167,7 @@ public function complete($id)
      *
      * @param int $id
      * @return bool
+     * @throws Exception
      */
     public function uncomplete($id)
     {
@@ -195,6 +191,7 @@ public function uncomplete($id)
      * @param int $task_list_id
      * @param array $ids
      * @return bool
+     * @throws Exception
      */
     public function reorder($task_list_id, array $ids)
     {

From b62053a9ec3f9880614d3a854bd3998a5183dd8d Mon Sep 17 00:00:00 2001
From: Jamie Buckell <jamie.buckell@visualsoft.co.uk>
Date: Wed, 20 Sep 2017 21:12:42 +0100
Subject: [PATCH 8/8] Added Role Model

---
 src/Role.php | 82 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 82 insertions(+)
 create mode 100755 src/Role.php

diff --git a/src/Role.php b/src/Role.php
new file mode 100755
index 0000000..9a44e62
--- /dev/null
+++ b/src/Role.php
@@ -0,0 +1,82 @@
+<?php namespace TeamWorkPm;
+
+class Role extends Model
+{
+
+  protected function init()
+  {
+    $this->fields = [
+      'name' => true,
+      'description' => false,
+      'users' => true,
+    ];
+    $this->action = 'roles';
+  }
+
+  public function get($id, $project_id = null)
+  {
+    $id = (int)$id;
+    if ($id <= 0) {
+      throw new Exception('Invalid param id');
+    }
+    $project_id = (int)$project_id;
+    $action = "$this->action/$id";
+    if ($project_id) {
+      $action = "projects/$project_id/$this->action";
+    }
+    return $this->rest->get($action);
+  }
+
+  /**
+   * Get all Roles (within a Project)
+   * GET /projects/#{project_id}/roles
+   * Retrieves all of the roles in a given project
+   *
+   * @param type $id
+   * @return TeamWorkPm\Response\Model
+   */
+  public function getByProject($id)
+  {
+    $id = (int)$id;
+    return $this->rest->get("projects/$id/$this->action");
+  }
+
+  /**
+   * Create a role
+   * POST /projects/#{project_id}/roles.xml
+   * This will create a new role.
+   *
+   * @param array $data
+   * @return mixed
+   * @throws Exception
+   */
+  public function insert(array $data)
+  {
+    $project_id = empty($data['project_id']) ? 0 : (int)$data['project_id'];
+    if ($project_id <= 0) {
+      throw new \TeamWorkPm\Exception('Required field project_id');
+    }
+    return $this->rest->post("projects/$project_id/$this->action", $data);
+  }
+
+  /**
+   * Update Role
+   *
+   * PUT /roles/#{role_id}
+   *
+   * Modifies an existing role.
+   *
+   * @param array $data
+   * @return mixed
+   * @throws Exception
+   */
+  public function update(array $data)
+  {
+    $id = empty($data['id']) ? 0  : (int) $data['id'];
+    if ($id <= 0) {
+      throw new \TeamWorkPm\Exception('Required field id');
+    }
+    unset($data['id']);
+    return $this->rest->put("$this->action/$id", $data);
+  }
+}
